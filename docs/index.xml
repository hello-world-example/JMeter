<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JMeter</title>
    <link>https://hello-world-example.github.io/JMeter/</link>
    <description>Recent content on JMeter</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://hello-world-example.github.io/JMeter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/_sidebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/_sidebar/</guid>
      <description> Basic   基础概念  JMeter 组件  作用域和顺序    MeterSphere..   Docker 方式安装    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/docs/Action/Distributed-Testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/docs/Action/Distributed-Testing/</guid>
      <description>分布式测试 Read More   25. Apache JMeter Distributed Testing Step-by-step  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/docs/Basic/Basic-Concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/docs/Basic/Basic-Concepts/</guid>
      <description>基础概念 测试分类 测试指标 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/docs/Basic/Components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/docs/Basic/Components/</guid>
      <description>JMeter 组件  https://github.com/hello-world-example/JMeter/blob/master/Draw/JMeter-Component.km
  Read More   Component Reference   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/docs/Basic/Scope-And-Order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/docs/Basic/Scope-And-Order/</guid>
      <description>作用域和顺序 作用域   变量和属性都是大小写敏感的
  如果相同的变量由多个用户定义的变量，那么只有最后一个有效
  一旦一个线程开始，每个线程的相关“用户定义的变量”将会初始化
 前置处理器中的”用户参数“ 或者 后置处理器中的“提取器”可能被用来重定义相同的变量，或者创建一个新的变量 这些重定义的变量只对当前的线程有效。    取样器(Sampler)：不与其他组件相互作用，无作用域问题
  逻辑控制器：元件只对其子节点中的取样器和逻辑控制器起作用
  如果组件是某个 Sampler 的子节点，则该元件只对其父子节点起作用
  如果组件的父节点不是 Sampler，对其作用域是：该组件父节点下的其他所有后代节点
  执行顺序  JMeter 测试计划树包含的元素，既是分层次的、又是有顺序的  层次： 配置元件、前置处理器，定时器、后置处理器、断言，监听器 顺序： 控制器、取样器   创建一个有序的请求列表，来呈现一个执行步骤的集合，这种场景通常都是用控制器来组织的，并且这些请求也是有顺序的 整体顺序： 配置元件 &amp;gt; 前置处理器 &amp;gt; 定时器 &amp;gt; Sampler &amp;gt; 后置处理器 &amp;gt; 断言 &amp;gt; 监听器 注意：有 Sampler 的时候，定时器、断言、前置/后置处理器才会被运行，逻辑控制器和sampler按他们在树中的顺序执行  Read More   3.9 Execution order  3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/JMeter/docs/MeterSphere/Install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/JMeter/docs/MeterSphere/Install/</guid>
      <description>MeterSphere 安装 git clone https://github.com/metersphere/installer.git Read More  官网文档： 在线安装 https://github.com/metersphere/installer  </description>
    </item>
    
  </channel>
</rss>